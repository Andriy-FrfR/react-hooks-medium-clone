import useFetch from 'hooks/useFetch';
import { useContext, useEffect, useState } from 'react';
import { Link } from 'react-router-dom';
import CommentsForm from 'pages/article/components/commentsForm';
import RemoveCommentBtn from 'pages/article/components/removeCommentBtn';
import Loading from 'components/loading';
import ErrorMessage from 'components/errorMessage';
import { CurrentUserContext } from 'contexts/currentUser';

const Comments = ({ slug }) => {
  const apiUrl = `/articles/${slug}/comments`;
  const [{ response, isLoading, error }, doFetch] = useFetch(apiUrl);
  const [comments, setComments] = useState(null);
  const [{ currentUser, isLoggedIn }] = useContext(CurrentUserContext);

  useEffect(() => {
    doFetch();
  }, [doFetch]);

  useEffect(() => {
    if (!response) {
      return;
    }

    setComments(response.comments);
  }, [response]);

  if (error) {
    return <ErrorMessage />;
  }

  if (isLoading || !comments) {
    return <Loading />;
  }

  return (
    <div className="row">
      <div className="col-xs-12 col-md-8 offset-md-2">
        <CommentsForm
          slug={slug}
          setComments={setComments}
          comments={comments}
        />
        {comments.map((comment, index) => {
          return (
            <div className="card" key={index}>
              <div className="card-block">{comment.body}</div>
              <div className="card-footer">
                <Link
                  className="comment-author"
                  to={`/profile/${comment.author.username}`}
                >
                  <img
                    className="comment-author-img"
                    src={comment.author.image}
                    alt=""
                  />
                </Link>
                &nbsp;
                <Link
                  className="comment-author"
                  to={`/profile/${comment.author.username}`}
                >
                  {comment.author.username}
                </Link>
                &nbsp;
                <span className="date-poster">
                  {new Date(comment.createdAt).toLocaleString()}
                </span>
                <span className="mod-options">
                  {isLoggedIn &&
                    currentUser.username === comment.author.username && (
                      <RemoveCommentBtn
                        commentId={comment.id}
                        articleSlug={slug}
                        setComments={setComments}
                        comments={comments}
                      />
                    )}
                </span>
              </div>
            </div>
          );
        })}
      </div>
    </div>
  );
};

export default Comments;
