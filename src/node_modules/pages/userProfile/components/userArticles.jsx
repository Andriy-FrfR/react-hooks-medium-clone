import Pagination from 'components/pagination';
import { stringify } from 'query-string';
import { useLocation } from 'react-router-dom';
import { getPaginator, limit } from 'utils';
import useFetch from 'hooks/useFetch';
import { useEffect } from 'react';
import Loading from 'components/loading';
import ErrorMessage from 'components/errorMessage';
import Feed from 'components/feed';

const UserArticles = ({ username, isFavoritesPage }) => {
  const getApiUrl = ({ username, offset, isFavoritesPage }) => {
    const params = isFavoritesPage
      ? { limit, offset, favorited: username }
      : { limit, offset, author: username };

    return `/articles?${stringify(params)}`;
  };

  const { search, pathname } = useLocation();
  const { offset, currentPage } = getPaginator(search);
  const apiUrl = getApiUrl({ username, offset, isFavoritesPage });
  const [{ response, isLoading, error }, doFetch] = useFetch(apiUrl);

  useEffect(() => {
    doFetch();
  }, [doFetch, currentPage, isFavoritesPage]);

  return (
    <div>
      {isLoading && <Loading />}
      {error && <ErrorMessage />}
      {!isLoading && response && (
        <>
          <Feed articles={response.articles} />
          <Pagination
            total={response.articlesCount}
            limit={limit}
            url={pathname}
            currentPage={currentPage}
          />
        </>
      )}
    </div>
  );
};

export default UserArticles;
