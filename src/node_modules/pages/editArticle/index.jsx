import ArticleForm from 'components/articleForm';
import { Navigate, useParams } from 'react-router-dom';
import useFetch from 'hooks/useFetch';
import { useContext, useEffect, useState } from 'react';
import { CurrentUserContext } from 'contexts/currentUser';

const EditArticle = () => {
  const slug = useParams().slug;
  const apiUrl = `/articles/${slug}`;
  const [{ response: fetchArticleResponse }, doFetchArticle] = useFetch(apiUrl);
  const [
    { response: updateArticleResponse, error: updateArticleError },
    doUpdateArticle,
  ] = useFetch(apiUrl);
  const [initialValues, setInitialValues] = useState(null);
  const [isSuccessfulSubmit, setIsSuccessfulSubmit] = useState(false);
  const [currentUserState] = useContext(CurrentUserContext);

  useEffect(() => {
    doFetchArticle();
  }, [doFetchArticle]);

  useEffect(() => {
    if (!fetchArticleResponse) {
      return;
    }

    const article = fetchArticleResponse.article;
    setInitialValues({
      title: article.title,
      body: article.body,
      description: article.description,
      tagList: article.tagList,
    });
  }, [fetchArticleResponse]);

  useEffect(() => {
    if (!updateArticleResponse) {
      return;
    }

    setIsSuccessfulSubmit(true);
  }, [updateArticleResponse]);

  const handleSubmit = (article) => {
    doUpdateArticle({
      method: 'put',
      data: {
        article,
      },
    });
  };

  if (isSuccessfulSubmit) {
    return <Navigate to={`/articles/${slug}`} />;
  }

  if (currentUserState.isLoggedIn === false) {
    return <Navigate to="/login" />;
  }

  return (
    <ArticleForm
      initialValues={initialValues}
      errors={(updateArticleError && updateArticleError.errors) || {}}
      onSubmit={handleSubmit}
    />
  );
};

export default EditArticle;
